{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar Stack = createNativeStackNavigator();\nimport * as React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { useFonts } from \"expo-font\";\nimport AndroidSmall1 from \"./screens/AndroidSmall1\";\nimport AndroidSmall2 from \"./screens/AndroidSmall2\";\nimport AndroidSmall4 from \"./screens/AndroidSmall4\";\nimport AndroidSmall16 from \"./screens/AndroidSmall16\";\nimport AndroidSmall5 from \"./screens/AndroidSmall5\";\nimport AndroidSmall3 from \"./screens/AndroidSmall3\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar App = function App() {\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    hideSplashScreen = _React$useState2[0],\n    setHideSplashScreen = _React$useState2[1];\n  return _jsx(_Fragment, {\n    children: _jsx(NavigationContainer, {\n      children: hideSplashScreen ? _jsxs(Stack.Navigator, {\n        screenOptions: {\n          headerShown: false\n        },\n        children: [_jsx(Stack.Screen, {\n          name: \"AndroidSmall1\",\n          component: AndroidSmall1,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"AndroidSmall2\",\n          component: AndroidSmall2,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"AndroidSmall4\",\n          component: AndroidSmall4,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"AndroidSmall16\",\n          component: AndroidSmall16,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"AndroidSmall5\",\n          component: AndroidSmall5,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"AndroidSmall3\",\n          component: AndroidSmall3,\n          options: {\n            headerShown: false\n          }\n        })]\n      }) : null\n    })\n  });\n};\nexport default App;","map":{"version":3,"names":["Stack","createNativeStackNavigator","React","NavigationContainer","useFonts","AndroidSmall1","AndroidSmall2","AndroidSmall4","AndroidSmall16","AndroidSmall5","AndroidSmall3","View","Text","Pressable","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","_React$useState","useState","_React$useState2","_slicedToArray","hideSplashScreen","setHideSplashScreen","children","Navigator","screenOptions","headerShown","Screen","name","component","options"],"sources":["C:/Users/hp/Desktop/locofy-react-native-project/App.js"],"sourcesContent":["const Stack = createNativeStackNavigator();\nimport * as React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { useFonts } from \"expo-font\";\nimport AndroidSmall1 from \"./screens/AndroidSmall1\";\nimport AndroidSmall2 from \"./screens/AndroidSmall2\";\nimport AndroidSmall4 from \"./screens/AndroidSmall4\";\nimport AndroidSmall16 from \"./screens/AndroidSmall16\";\nimport AndroidSmall5 from \"./screens/AndroidSmall5\";\nimport AndroidSmall3 from \"./screens/AndroidSmall3\";\n\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { View, Text, Pressable, TouchableOpacity } from \"react-native\";\n\nconst App = () => {\n  const [hideSplashScreen, setHideSplashScreen] = React.useState(true);\n  // const [fontsLoaded, error] = useFonts({\n  //   Nunito_regular: require(\"./assets/fonts/Nunito_Regular.ttf\"),\n  //   Outfit_medium: require(\"./assets/fonts/Outfit_medium.ttf\"),\n  //   Outfit_bold: require(\"./assets/fonts/Outfit_bold.ttf\"),\n  //   Inter_regular: require(\"./assets/fonts/Inter_regular.ttf\"),\n  // });\n\n  // if (!fontsLoaded && !error) {\n  //   return null;\n  // }\n\n  return (\n    <>\n      <NavigationContainer>\n        {hideSplashScreen ? (\n          <Stack.Navigator screenOptions={{ headerShown: false }}>\n            <Stack.Screen\n              name=\"AndroidSmall1\"\n              component={AndroidSmall1}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"AndroidSmall2\"\n              component={AndroidSmall2}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"AndroidSmall4\"\n              component={AndroidSmall4}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"AndroidSmall16\"\n              component={AndroidSmall16}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"AndroidSmall5\"\n              component={AndroidSmall5}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"AndroidSmall3\"\n              component={AndroidSmall3}\n              options={{ headerShown: false }}\n            />\n          </Stack.Navigator>\n        ) : null}\n      </NavigationContainer>\n    </>\n  );\n};\nexport default App;\n"],"mappings":";AAAA,IAAMA,KAAK,GAAGC,0BAA0B,CAAC,CAAC;AAC1C,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,QAAQ,QAAQ,WAAW;AACpC,OAAOC,aAAa;AACpB,OAAOC,aAAa;AACpB,OAAOC,aAAa;AACpB,OAAOC,cAAc;AACrB,OAAOC,aAAa;AACpB,OAAOC,aAAa;AAEpB,SAAST,0BAA0B,QAAQ,gCAAgC;AAAC,OAAAU,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG5E,IAAMC,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAChB,IAAAC,eAAA,GAAgDpB,KAAK,CAACqB,QAAQ,CAAC,IAAI,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAA7DI,gBAAgB,GAAAF,gBAAA;IAAEG,mBAAmB,GAAAH,gBAAA;EAY5C,OACER,IAAA,CAAAI,SAAA;IAAAQ,QAAA,EACEZ,IAAA,CAACb,mBAAmB;MAAAyB,QAAA,EACjBF,gBAAgB,GACfR,KAAA,CAAClB,KAAK,CAAC6B,SAAS;QAACC,aAAa,EAAE;UAAEC,WAAW,EAAE;QAAM,CAAE;QAAAH,QAAA,GACrDZ,IAAA,CAAChB,KAAK,CAACgC,MAAM;UACXC,IAAI,EAAC,eAAe;UACpBC,SAAS,EAAE7B,aAAc;UACzB8B,OAAO,EAAE;YAAEJ,WAAW,EAAE;UAAM;QAAE,CACjC,CAAC,EACFf,IAAA,CAAChB,KAAK,CAACgC,MAAM;UACXC,IAAI,EAAC,eAAe;UACpBC,SAAS,EAAE5B,aAAc;UACzB6B,OAAO,EAAE;YAAEJ,WAAW,EAAE;UAAM;QAAE,CACjC,CAAC,EACFf,IAAA,CAAChB,KAAK,CAACgC,MAAM;UACXC,IAAI,EAAC,eAAe;UACpBC,SAAS,EAAE3B,aAAc;UACzB4B,OAAO,EAAE;YAAEJ,WAAW,EAAE;UAAM;QAAE,CACjC,CAAC,EACFf,IAAA,CAAChB,KAAK,CAACgC,MAAM;UACXC,IAAI,EAAC,gBAAgB;UACrBC,SAAS,EAAE1B,cAAe;UAC1B2B,OAAO,EAAE;YAAEJ,WAAW,EAAE;UAAM;QAAE,CACjC,CAAC,EACFf,IAAA,CAAChB,KAAK,CAACgC,MAAM;UACXC,IAAI,EAAC,eAAe;UACpBC,SAAS,EAAEzB,aAAc;UACzB0B,OAAO,EAAE;YAAEJ,WAAW,EAAE;UAAM;QAAE,CACjC,CAAC,EACFf,IAAA,CAAChB,KAAK,CAACgC,MAAM;UACXC,IAAI,EAAC,eAAe;UACpBC,SAAS,EAAExB,aAAc;UACzByB,OAAO,EAAE;YAAEJ,WAAW,EAAE;UAAM;QAAE,CACjC,CAAC;MAAA,CACa,CAAC,GAChB;IAAI,CACW;EAAC,CACtB,CAAC;AAEP,CAAC;AACD,eAAeV,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}